// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddOperator extends ethereum.Event {
  get params(): AddOperator__Params {
    return new AddOperator__Params(this);
  }
}

export class AddOperator__Params {
  _event: AddOperator;

  constructor(event: AddOperator) {
    this._event = event;
  }

  get _operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AddSupportedThirdParty extends ethereum.Event {
  get params(): AddSupportedThirdParty__Params {
    return new AddSupportedThirdParty__Params(this);
  }
}

export class AddSupportedThirdParty__Params {
  _event: AddSupportedThirdParty;

  constructor(event: AddSupportedThirdParty) {
    this._event = event;
  }

  get _name(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class Burn extends ethereum.Event {
  get params(): Burn__Params {
    return new Burn__Params(this);
  }
}

export class Burn__Params {
  _event: Burn;

  constructor(event: Burn) {
    this._event = event;
  }

  get _userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DecreaseReputation extends ethereum.Event {
  get params(): DecreaseReputation__Params {
    return new DecreaseReputation__Params(this);
  }
}

export class DecreaseReputation__Params {
  _event: DecreaseReputation;

  constructor(event: DecreaseReputation) {
    this._event = event;
  }

  get _userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class IncreaseReputation extends ethereum.Event {
  get params(): IncreaseReputation__Params {
    return new IncreaseReputation__Params(this);
  }
}

export class IncreaseReputation__Params {
  _event: IncreaseReputation;

  constructor(event: IncreaseReputation) {
    this._event = event;
  }

  get _userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class LinkThirdPartyToProfile extends ethereum.Event {
  get params(): LinkThirdPartyToProfile__Params {
    return new LinkThirdPartyToProfile__Params(this);
  }
}

export class LinkThirdPartyToProfile__Params {
  _event: LinkThirdPartyToProfile;

  constructor(event: LinkThirdPartyToProfile) {
    this._event = event;
  }

  get _userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _thirdPartyId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _thirdPartyUserId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Mint extends ethereum.Event {
  get params(): Mint__Params {
    return new Mint__Params(this);
  }
}

export class Mint__Params {
  _event: Mint;

  constructor(event: Mint) {
    this._event = event;
  }

  get _userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _pseudo(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RemoveOperator extends ethereum.Event {
  get params(): RemoveOperator__Params {
    return new RemoveOperator__Params(this);
  }
}

export class RemoveOperator__Params {
  _event: RemoveOperator;

  constructor(event: RemoveOperator) {
    this._event = event;
  }

  get _operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class TransferBatch extends ethereum.Event {
  get params(): TransferBatch__Params {
    return new TransferBatch__Params(this);
  }
}

export class TransferBatch__Params {
  _event: TransferBatch;

  constructor(event: TransferBatch) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }
}

export class TransferSingle extends ethereum.Event {
  get params(): TransferSingle__Params {
    return new TransferSingle__Params(this);
  }
}

export class TransferSingle__Params {
  _event: TransferSingle;

  constructor(event: TransferSingle) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class URI extends ethereum.Event {
  get params(): URI__Params {
    return new URI__Params(this);
  }
}

export class URI__Params {
  _event: URI;

  constructor(event: URI) {
    this._event = event;
  }

  get value(): string {
    return this._event.parameters[0].value.toString();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UnlinkThirdPartyToProfile extends ethereum.Event {
  get params(): UnlinkThirdPartyToProfile__Params {
    return new UnlinkThirdPartyToProfile__Params(this);
  }
}

export class UnlinkThirdPartyToProfile__Params {
  _event: UnlinkThirdPartyToProfile;

  constructor(event: UnlinkThirdPartyToProfile) {
    this._event = event;
  }

  get _userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _thirdPartyId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Update extends ethereum.Event {
  get params(): Update__Params {
    return new Update__Params(this);
  }
}

export class Update__Params {
  _event: Update;

  constructor(event: Update) {
    this._event = event;
  }

  get _userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _pseudo(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class ggProfiles__generateHashInput_userDataStruct extends ethereum.Tuple {
  get pseudo(): string {
    return this[0].toString();
  }

  get profilePictureURL(): string {
    return this[1].toString();
  }

  get coverPictureURL(): string {
    return this[2].toString();
  }
}

export class ggProfiles__getProfileDataResultValue0Struct extends ethereum.Tuple {
  get pseudo(): string {
    return this[0].toString();
  }

  get profilePictureURL(): string {
    return this[1].toString();
  }

  get coverPictureURL(): string {
    return this[2].toString();
  }

  get isRegistered(): boolean {
    return this[3].toBoolean();
  }

  get gainedReputation(): BigInt {
    return this[4].toBigInt();
  }

  get lostReputation(): BigInt {
    return this[5].toBigInt();
  }

  get linkedThirdParties(): Array<
    ggProfiles__getProfileDataResultValue0LinkedThirdPartiesStruct
  > {
    return this[6].toTupleArray<
      ggProfiles__getProfileDataResultValue0LinkedThirdPartiesStruct
    >();
  }
}

export class ggProfiles__getProfileDataResultValue0LinkedThirdPartiesStruct extends ethereum.Tuple {
  get thirdPartyId(): BigInt {
    return this[0].toBigInt();
  }

  get userID(): BigInt {
    return this[1].toBigInt();
  }
}

export class ggProfiles__getProfilePicturesResult {
  value0: string;
  value1: string;

  constructor(value0: string, value1: string) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    return map;
  }

  getProfilePictureURL(): string {
    return this.value0;
  }

  getCoverPictureURL(): string {
    return this.value1;
  }
}

export class ggProfiles__getReputationResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class ggProfiles extends ethereum.SmartContract {
  static bind(address: Address): ggProfiles {
    return new ggProfiles("ggProfiles", address);
  }

  balanceOf(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_balanceOf(param0: Address, param1: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOfBatch(owners: Array<Address>, ids: Array<BigInt>): Array<BigInt> {
    let result = super.call(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(owners),
        ethereum.Value.fromUnsignedBigIntArray(ids)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_balanceOfBatch(
    owners: Array<Address>,
    ids: Array<BigInt>
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(owners),
        ethereum.Value.fromUnsignedBigIntArray(ids)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  claimSignatureHash(param0: BigInt): Bytes {
    let result = super.call(
      "claimSignatureHash",
      "claimSignatureHash(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBytes();
  }

  try_claimSignatureHash(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "claimSignatureHash",
      "claimSignatureHash(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  contractURI(): string {
    let result = super.call("contractURI", "contractURI():(string)", []);

    return result[0].toString();
  }

  try_contractURI(): ethereum.CallResult<string> {
    let result = super.tryCall("contractURI", "contractURI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  generateHash(_userData: ggProfiles__generateHashInput_userDataStruct): Bytes {
    let result = super.call(
      "generateHash",
      "generateHash((string,string,string)):(bytes32)",
      [ethereum.Value.fromTuple(_userData)]
    );

    return result[0].toBytes();
  }

  try_generateHash(
    _userData: ggProfiles__generateHashInput_userDataStruct
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "generateHash",
      "generateHash((string,string,string)):(bytes32)",
      [ethereum.Value.fromTuple(_userData)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getOwnerOf(_tokenId: BigInt): Address {
    let result = super.call("getOwnerOf", "getOwnerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getOwnerOf(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("getOwnerOf", "getOwnerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getProfileData(
    _userAddress: Address
  ): ggProfiles__getProfileDataResultValue0Struct {
    let result = super.call(
      "getProfileData",
      "getProfileData(address):((string,string,string,bool,uint256,uint256,(uint256,uint256)[]))",
      [ethereum.Value.fromAddress(_userAddress)]
    );

    return changetype<ggProfiles__getProfileDataResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getProfileData(
    _userAddress: Address
  ): ethereum.CallResult<ggProfiles__getProfileDataResultValue0Struct> {
    let result = super.tryCall(
      "getProfileData",
      "getProfileData(address):((string,string,string,bool,uint256,uint256,(uint256,uint256)[]))",
      [ethereum.Value.fromAddress(_userAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ggProfiles__getProfileDataResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getProfilePictures(_user: Address): ggProfiles__getProfilePicturesResult {
    let result = super.call(
      "getProfilePictures",
      "getProfilePictures(address):(string,string)",
      [ethereum.Value.fromAddress(_user)]
    );

    return new ggProfiles__getProfilePicturesResult(
      result[0].toString(),
      result[1].toString()
    );
  }

  try_getProfilePictures(
    _user: Address
  ): ethereum.CallResult<ggProfiles__getProfilePicturesResult> {
    let result = super.tryCall(
      "getProfilePictures",
      "getProfilePictures(address):(string,string)",
      [ethereum.Value.fromAddress(_user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ggProfiles__getProfilePicturesResult(
        value[0].toString(),
        value[1].toString()
      )
    );
  }

  getRegisteredAddresses(): Array<Address> {
    let result = super.call(
      "getRegisteredAddresses",
      "getRegisteredAddresses():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getRegisteredAddresses(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getRegisteredAddresses",
      "getRegisteredAddresses():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getReputation(_userAddress: Address): ggProfiles__getReputationResult {
    let result = super.call(
      "getReputation",
      "getReputation(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(_userAddress)]
    );

    return new ggProfiles__getReputationResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getReputation(
    _userAddress: Address
  ): ethereum.CallResult<ggProfiles__getReputationResult> {
    let result = super.tryCall(
      "getReputation",
      "getReputation(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(_userAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ggProfiles__getReputationResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getThirdParties(): Array<string> {
    let result = super.call(
      "getThirdParties",
      "getThirdParties():(string[])",
      []
    );

    return result[0].toStringArray();
  }

  try_getThirdParties(): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "getThirdParties",
      "getThirdParties():(string[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  hasProfileData(_userAddress: Address): boolean {
    let result = super.call(
      "hasProfileData",
      "hasProfileData(address):(bool)",
      [ethereum.Value.fromAddress(_userAddress)]
    );

    return result[0].toBoolean();
  }

  try_hasProfileData(_userAddress: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasProfileData",
      "hasProfileData(address):(bool)",
      [ethereum.Value.fromAddress(_userAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isApprovedForAll(param0: Address, param1: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAvailable(_pseudo: string): boolean {
    let result = super.call("isAvailable", "isAvailable(string):(bool)", [
      ethereum.Value.fromString(_pseudo)
    ]);

    return result[0].toBoolean();
  }

  try_isAvailable(_pseudo: string): ethereum.CallResult<boolean> {
    let result = super.tryCall("isAvailable", "isAvailable(string):(bool)", [
      ethereum.Value.fromString(_pseudo)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOperator(_operator: Address): boolean {
    let result = super.call("isOperator", "isOperator(address):(bool)", [
      ethereum.Value.fromAddress(_operator)
    ]);

    return result[0].toBoolean();
  }

  try_isOperator(_operator: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isOperator", "isOperator(address):(bool)", [
      ethereum.Value.fromAddress(_operator)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  operators(param0: Address): boolean {
    let result = super.call("operators", "operators(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_operators(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("operators", "operators(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOf(param0: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  registeredAddresses(param0: BigInt): Address {
    let result = super.call(
      "registeredAddresses",
      "registeredAddresses(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_registeredAddresses(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "registeredAddresses",
      "registeredAddresses(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenURI(_tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  uri(id: BigInt): string {
    let result = super.call("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(id)
    ]);

    return result[0].toString();
  }

  try_uri(id: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddOperatorCall extends ethereum.Call {
  get inputs(): AddOperatorCall__Inputs {
    return new AddOperatorCall__Inputs(this);
  }

  get outputs(): AddOperatorCall__Outputs {
    return new AddOperatorCall__Outputs(this);
  }
}

export class AddOperatorCall__Inputs {
  _call: AddOperatorCall;

  constructor(call: AddOperatorCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddOperatorCall__Outputs {
  _call: AddOperatorCall;

  constructor(call: AddOperatorCall) {
    this._call = call;
  }
}

export class AddThirdPartyCall extends ethereum.Call {
  get inputs(): AddThirdPartyCall__Inputs {
    return new AddThirdPartyCall__Inputs(this);
  }

  get outputs(): AddThirdPartyCall__Outputs {
    return new AddThirdPartyCall__Outputs(this);
  }
}

export class AddThirdPartyCall__Inputs {
  _call: AddThirdPartyCall;

  constructor(call: AddThirdPartyCall) {
    this._call = call;
  }

  get _thirdPartyName(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddThirdPartyCall__Outputs {
  _call: AddThirdPartyCall;

  constructor(call: AddThirdPartyCall) {
    this._call = call;
  }
}

export class DecreaseReputationCall extends ethereum.Call {
  get inputs(): DecreaseReputationCall__Inputs {
    return new DecreaseReputationCall__Inputs(this);
  }

  get outputs(): DecreaseReputationCall__Outputs {
    return new DecreaseReputationCall__Outputs(this);
  }
}

export class DecreaseReputationCall__Inputs {
  _call: DecreaseReputationCall;

  constructor(call: DecreaseReputationCall) {
    this._call = call;
  }

  get _userAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseReputationCall__Outputs {
  _call: DecreaseReputationCall;

  constructor(call: DecreaseReputationCall) {
    this._call = call;
  }
}

export class IncreaseReputationCall extends ethereum.Call {
  get inputs(): IncreaseReputationCall__Inputs {
    return new IncreaseReputationCall__Inputs(this);
  }

  get outputs(): IncreaseReputationCall__Outputs {
    return new IncreaseReputationCall__Outputs(this);
  }
}

export class IncreaseReputationCall__Inputs {
  _call: IncreaseReputationCall;

  constructor(call: IncreaseReputationCall) {
    this._call = call;
  }

  get _userAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseReputationCall__Outputs {
  _call: IncreaseReputationCall;

  constructor(call: IncreaseReputationCall) {
    this._call = call;
  }
}

export class LinkThirdPartyToProfileCall extends ethereum.Call {
  get inputs(): LinkThirdPartyToProfileCall__Inputs {
    return new LinkThirdPartyToProfileCall__Inputs(this);
  }

  get outputs(): LinkThirdPartyToProfileCall__Outputs {
    return new LinkThirdPartyToProfileCall__Outputs(this);
  }
}

export class LinkThirdPartyToProfileCall__Inputs {
  _call: LinkThirdPartyToProfileCall;

  constructor(call: LinkThirdPartyToProfileCall) {
    this._call = call;
  }

  get _profileAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _thirdPartyId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _thirdPartyUserID(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class LinkThirdPartyToProfileCall__Outputs {
  _call: LinkThirdPartyToProfileCall;

  constructor(call: LinkThirdPartyToProfileCall) {
    this._call = call;
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get _userData(): MintCall_userDataStruct {
    return changetype<MintCall_userDataStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get _signature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }
}

export class MintCall_userDataStruct extends ethereum.Tuple {
  get pseudo(): string {
    return this[0].toString();
  }

  get profilePictureURL(): string {
    return this[1].toString();
  }

  get coverPictureURL(): string {
    return this[2].toString();
  }
}

export class RemoveOperatorCall extends ethereum.Call {
  get inputs(): RemoveOperatorCall__Inputs {
    return new RemoveOperatorCall__Inputs(this);
  }

  get outputs(): RemoveOperatorCall__Outputs {
    return new RemoveOperatorCall__Outputs(this);
  }
}

export class RemoveOperatorCall__Inputs {
  _call: RemoveOperatorCall;

  constructor(call: RemoveOperatorCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveOperatorCall__Outputs {
  _call: RemoveOperatorCall;

  constructor(call: RemoveOperatorCall) {
    this._call = call;
  }
}

export class SafeBatchTransferFromCall extends ethereum.Call {
  get inputs(): SafeBatchTransferFromCall__Inputs {
    return new SafeBatchTransferFromCall__Inputs(this);
  }

  get outputs(): SafeBatchTransferFromCall__Outputs {
    return new SafeBatchTransferFromCall__Outputs(this);
  }
}

export class SafeBatchTransferFromCall__Inputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get value3(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeBatchTransferFromCall__Outputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetContractURICall extends ethereum.Call {
  get inputs(): SetContractURICall__Inputs {
    return new SetContractURICall__Inputs(this);
  }

  get outputs(): SetContractURICall__Outputs {
    return new SetContractURICall__Outputs(this);
  }
}

export class SetContractURICall__Inputs {
  _call: SetContractURICall;

  constructor(call: SetContractURICall) {
    this._call = call;
  }

  get _contractURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetContractURICall__Outputs {
  _call: SetContractURICall;

  constructor(call: SetContractURICall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnlinkThirdPartyFromProfileCall extends ethereum.Call {
  get inputs(): UnlinkThirdPartyFromProfileCall__Inputs {
    return new UnlinkThirdPartyFromProfileCall__Inputs(this);
  }

  get outputs(): UnlinkThirdPartyFromProfileCall__Outputs {
    return new UnlinkThirdPartyFromProfileCall__Outputs(this);
  }
}

export class UnlinkThirdPartyFromProfileCall__Inputs {
  _call: UnlinkThirdPartyFromProfileCall;

  constructor(call: UnlinkThirdPartyFromProfileCall) {
    this._call = call;
  }

  get _profileAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _thirdPartyId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UnlinkThirdPartyFromProfileCall__Outputs {
  _call: UnlinkThirdPartyFromProfileCall;

  constructor(call: UnlinkThirdPartyFromProfileCall) {
    this._call = call;
  }
}

export class UpdateCall extends ethereum.Call {
  get inputs(): UpdateCall__Inputs {
    return new UpdateCall__Inputs(this);
  }

  get outputs(): UpdateCall__Outputs {
    return new UpdateCall__Outputs(this);
  }
}

export class UpdateCall__Inputs {
  _call: UpdateCall;

  constructor(call: UpdateCall) {
    this._call = call;
  }

  get _userData(): UpdateCall_userDataStruct {
    return changetype<UpdateCall_userDataStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class UpdateCall__Outputs {
  _call: UpdateCall;

  constructor(call: UpdateCall) {
    this._call = call;
  }
}

export class UpdateCall_userDataStruct extends ethereum.Tuple {
  get pseudo(): string {
    return this[0].toString();
  }

  get profilePictureURL(): string {
    return this[1].toString();
  }

  get coverPictureURL(): string {
    return this[2].toString();
  }
}
